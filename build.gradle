apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
apply plugin: 'maven-publish'


buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.0.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.0"
        classpath 'org.jacoco:org.jacoco.core:0.8.3'
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
    }
}

Properties versionProps = new Properties()
def versionPropsFile = file('version.properties')

if (versionPropsFile.exists())
    versionProps.load(new FileInputStream(versionPropsFile))

def increment = 0

def runTasks = gradle.startParameter.taskNames

if ('build' in runTasks) {
    increment = 1
}

def majorVersion = 3
def minorVersion = 0
def patch = versionProps['VERSION_PATCH'].toInteger() + increment

def verString = majorVersion + '.' + minorVersion + '.' + patch

task printVersion {
    println verString
}

versionProps['VERSION_PATCH'] = patch.toString()
versionProps.store(versionPropsFile.newWriter(), null)  

jacocoTestReport {
    reports {
        xml.enabled=true
        html.enabled=false
    }
}

tasks {
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.30"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.70'
    testImplementation "junit:junit:4.13.2"
    implementation "org.json:json:20160212"
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/libs/sdk-core-kotlin.jar")
            groupId 'network.xyo'
            artifactId 'sdk-core-kotlin'
            version verString

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}